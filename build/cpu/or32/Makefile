# Makefile.in generated by automake 1.10.1 from Makefile.am.
# cpu/or32/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile -- Makefile for OR32 dependent simulation
#
# Copyright (C) 1999 Damjan Lampret, lampret@opencores.org
# Copyright (C) 2008 Embecosm Limited
#
# Contributor Jeremy Bennett <jeremy.bennett@embecosm.com>
#
# This file is part of OpenRISC 1000 Architectural Simulator.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3 of the License, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.


VPATH = ../../../cpu/or32
pkgdatadir = $(datadir)/or1ksim
pkglibdir = $(libdir)/or1ksim
pkgincludedir = $(includedir)/or1ksim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = or32-unknown-uclinux
noinst_PROGRAMS = generate$(EXEEXT)
#noinst_PROGRAMS = dyngen$(EXEEXT)
subdir = cpu/or32
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libarch_la_LIBADD =
am__libarch_la_SOURCES_DIST = execute.c insnset.c or32.c common-i386.h \
	dyn32-defs.h dyngen.h dyn-rec.h i386-regs.h op-arith-op.h \
	op-comp-op.h op-extend-op.h op-ff1-op.h op-i386.h op-lwhb-op.h \
	op-mac-op.h op-mftspr-op.h op-support.h op-swhb-op.h \
	op-t-reg-mov-op.h rec-i386.h sched-i386.h simpl32-defs.h op.c \
	dyn-rec.c op-support.c
#am_libarch_la_OBJECTS =  \
#	execute.lo \
#	insnset.lo \
#	or32.lo
am_libarch_la_OBJECTS =  \
	execute.lo \
	or32.lo
#am_libarch_la_OBJECTS = execute.lo or32.lo \
#	op.lo dyn-rec.lo op-support.lo
#nodist_libarch_la_OBJECTS = gen-ops.lo \
#	gen-ops-gen.lo gen-ops-rel.lo
libarch_la_OBJECTS = $(am_libarch_la_OBJECTS) \
	$(nodist_libarch_la_OBJECTS)
am_libarch_la_rpath =
#am_libarch_la_rpath =
libop_la_LIBADD =
am__libop_la_SOURCES_DIST = op.c op-t-reg-mov-op.h op-i386.h \
	op-arith-op.h op-comp-op.h op-extend-op.h op-mac-op.h \
	op-mftspr-op.h op-lwhb-op.h op-swhb-op.h
#am_libop_la_OBJECTS = libop_la-op.lo
libop_la_OBJECTS = $(am_libop_la_OBJECTS)
libop_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(libop_la_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libop_la_rpath =
PROGRAMS = $(noinst_PROGRAMS)
am__dyngen_SOURCES_DIST = dyngen.c dyngen-i386.c dyngen-elf.c \
	common-i386.h dyn32-defs.h dyngen.h dyn-rec.h i386-regs.h \
	op-arith-op.h op-comp-op.h op-extend-op.h op-ff1-op.h \
	op-i386.h op-lwhb-op.h op-mac-op.h op-mftspr-op.h op-support.h \
	op-swhb-op.h op-t-reg-mov-op.h rec-i386.h sched-i386.h \
	simpl32-defs.h
#am_dyngen_OBJECTS = dyngen-dyngen.$(OBJEXT) \
#	dyngen-dyngen-i386.$(OBJEXT) \
#	dyngen-dyngen-elf.$(OBJEXT)
dyngen_OBJECTS = $(am_dyngen_OBJECTS)
dyngen_LDADD = $(LDADD)
dyngen_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(dyngen_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__generate_SOURCES_DIST = or32.c generate.c common-i386.h \
	dyn32-defs.h dyngen.h dyn-rec.h i386-regs.h op-arith-op.h \
	op-comp-op.h op-extend-op.h op-ff1-op.h op-i386.h op-lwhb-op.h \
	op-mac-op.h op-mftspr-op.h op-support.h op-swhb-op.h \
	op-t-reg-mov-op.h rec-i386.h sched-i386.h simpl32-defs.h
am_generate_OBJECTS = generate-or32.$(OBJEXT) \
	generate-generate.$(OBJEXT)
generate_OBJECTS = $(am_generate_OBJECTS)
generate_LDADD = $(LDADD)
generate_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(generate_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libarch_la_SOURCES) $(nodist_libarch_la_SOURCES) \
	$(libop_la_SOURCES) $(dyngen_SOURCES) $(generate_SOURCES)
DIST_SOURCES = $(am__libarch_la_SOURCES_DIST) \
	$(am__libop_la_SOURCES_DIST) $(am__dyngen_SOURCES_DIST) \
	$(am__generate_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/missing --run tar
AR = ar
ARFLAGS = cr
AUTOCONF = ${SHELL} /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/missing --run automake-1.10
AWK = gawk
BUILD_DIR = /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/build
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CPU_ARCH = or32
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUGFLAGS = -DNDEBUG
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -O2
GREP = /bin/grep
INCLUDES = -I${top_builddir}/cpu/or32 -I${top_srcdir} -I${top_srcdir}/cpu/common -I${top_srcdir}/cpu/or1k -I${top_srcdir}/cache -I${top_srcdir}/mmu -I${top_srcdir}/bpb -I${top_srcdir}/peripheral -I${top_srcdir}/tick -I${top_srcdir}/peripheral/channels -I${top_srcdir}/pm -I${top_srcdir}/pic -I${top_srcdir}/debug -I${top_srcdir}/vapi -I${top_srcdir}/support -I${top_srcdir}/cuc -I${top_srcdir}/port -I${top_srcdir}/argtable2
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lreadline 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LOCAL_CFLAGS = 
LOCAL_DEFS = 
LOCAL_LDFLAGS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/missing --run makeinfo
MAKE_SHELL = /bin/sh
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = or1ksim
PACKAGE_BUGREPORT = openrisc@opencores.org
PACKAGE_NAME = or1ksim
PACKAGE_STRING = or1ksim 0.3.0rc1
PACKAGE_TARNAME = or1ksim
PACKAGE_VERSION = 0.3.0rc1
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
SUMVERSION = 
TERMCAP_LIB = 
VERSION = 0.3.0rc1
abs_builddir = /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/build/cpu/or32
abs_srcdir = /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/build/../cpu/or32
abs_top_builddir = /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/build
abs_top_srcdir = /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/build/..
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/jeremy/partners/OpenCores/cvstrees/or1k/or1ksim/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/or1ksim
program_transform_name = s&^&or32-uclinux-&
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../cpu/or32
sysconfdir = ${prefix}/etc
target = or32-unknown-uclinux
target_alias = or32-uclinux
target_cpu = or32
target_os = uclinux
target_vendor = unknown
top_builddir = ../..
top_srcdir = ../../..
noinst_LTLIBRARIES = libarch.la
#noinst_LTLIBRARIES = libarch.la libop.la
#dyngen_SOURCES = dyngen.c          \
#		     dyngen-i386.c     \
#		     dyngen-elf.c      \
#		     common-i386.h     \
#		     dyn32-defs.h      \
#		     dyngen.h          \
#		     dyn-rec.h         \
#		     i386-regs.h       \
#		     op-arith-op.h     \
#		     op-comp-op.h      \
#		     op-extend-op.h    \
#		     op-ff1-op.h       \
#		     op-i386.h         \
#		     op-lwhb-op.h      \
#		     op-mac-op.h       \
#		     op-mftspr-op.h    \
#		     op-support.h      \
#		     op-swhb-op.h      \
#		     op-t-reg-mov-op.h \
#		     rec-i386.h        \
#		     sched-i386.h      \
#		     simpl32-defs.h 

#dyngen_CFLAGS = $(AM_CFLAGS)
#libarch_la_SOURCES = execute.c         \
#		     insnset.c         \
#                     or32.c            \
#		     common-i386.h     \
#		     dyn32-defs.h      \
#		     dyngen.h          \
#		     dyn-rec.h         \
#		     i386-regs.h       \
#		     op-arith-op.h     \
#		     op-comp-op.h      \
#		     op-extend-op.h    \
#		     op-ff1-op.h       \
#		     op-i386.h         \
#		     op-lwhb-op.h      \
#		     op-mac-op.h       \
#		     op-mftspr-op.h    \
#		     op-support.h      \
#		     op-swhb-op.h      \
#		     op-t-reg-mov-op.h \
#		     rec-i386.h        \
#		     sched-i386.h      \
#		     simpl32-defs.h 

libarch_la_SOURCES = execute.c         \
                     or32.c            \
		     common-i386.h     \
		     dyn32-defs.h      \
		     dyngen.h          \
		     dyn-rec.h         \
		     i386-regs.h       \
		     op-arith-op.h     \
		     op-comp-op.h      \
		     op-extend-op.h    \
		     op-ff1-op.h       \
		     op-i386.h         \
		     op-lwhb-op.h      \
		     op-mac-op.h       \
		     op-mftspr-op.h    \
		     op-support.h      \
		     op-swhb-op.h      \
		     op-t-reg-mov-op.h \
		     rec-i386.h        \
		     sched-i386.h      \
		     simpl32-defs.h 

#libarch_la_SOURCES = execute.c         \
#		     or32.c            \
#		     op.c              \
#		     dyn-rec.c         \
#		     op-support.c      \
#		     common-i386.h     \
#		     dyn32-defs.h      \
#		     dyngen.h          \
#		     dyn-rec.h         \
#	             i386-regs.h       \
#		     op-arith-op.h     \
#		     op-comp-op.h      \
#		     op-extend-op.h    \
#		     op-ff1-op.h       \
#		     op-i386.h         \
#		     op-lwhb-op.h      \
#		     op-mac-op.h       \
#		     op-mftspr-op.h    \
#		     op-support.h      \
#		     op-swhb-op.h      \
#		     op-t-reg-mov-op.h \
#		     rec-i386.h        \
#		     sched-i386.h      \
#		     simpl32-defs.h 

#nodist_libarch_la_SOURCES = gen-ops.h     \
#			    gen-ops.c     \
#			    gen-ops-gen.c \
#			    gen-ops-rel.c

BUILT_SOURCES = execgen.c
#BUILT_SOURCES = gen-ops.h     \
#			    gen-ops.c     \
#			    gen-ops-gen.c \
#			    gen-ops-rel.c

#libop_la_SOURCES = op.c                    \
#		     op-t-reg-mov-op.h       \
#		     op-i386.h op-arith-op.h \
#		     op-comp-op.h            \
#	             op-extend-op.h          \
#		     op-mac-op.h             \
#		     op-mftspr-op.h          \
#		     op-lwhb-op.h            \
#		     op-swhb-op.h

#libop_la_CFLAGS = -Wall -fomit-frame-pointer -fno-reorder-blocks -O2
EXTRA_DIST = insnset.c
generate_SOURCES = or32.c            \
                     generate.c        \
		     common-i386.h     \
                     dyn32-defs.h      \
                     dyngen.h          \
                     dyn-rec.h         \
		     i386-regs.h       \
                     op-arith-op.h     \
                     op-comp-op.h      \
		     op-extend-op.h    \
                     op-ff1-op.h       \
                     op-i386.h         \
                     op-lwhb-op.h      \
		     op-mac-op.h       \
                     op-mftspr-op.h    \
                     op-support.h      \
                     op-swhb-op.h      \
		     op-t-reg-mov-op.h \
                     rec-i386.h        \
                     sched-i386.h      \
                     simpl32-defs.h 

generate_CFLAGS = $(AM_CFLAGS)

# If the simulator was first built without --enable-simple and then with it,
# then also remove these two files
CLEANFILES = execgen.c \
             generate \
             gen-ops.c \
             gen-ops.h \
             gen-ops-rel.c \
             gen-ops-gen.c

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  cpu/or32/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  cpu/or32/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libarch.la: $(libarch_la_OBJECTS) $(libarch_la_DEPENDENCIES) 
	$(LINK) $(am_libarch_la_rpath) $(libarch_la_OBJECTS) $(libarch_la_LIBADD) $(LIBS)
libop.la: $(libop_la_OBJECTS) $(libop_la_DEPENDENCIES) 
	$(libop_la_LINK) $(am_libop_la_rpath) $(libop_la_OBJECTS) $(libop_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
dyngen$(EXEEXT): $(dyngen_OBJECTS) $(dyngen_DEPENDENCIES) 
	@rm -f dyngen$(EXEEXT)
	$(dyngen_LINK) $(dyngen_OBJECTS) $(dyngen_LDADD) $(LIBS)
generate$(EXEEXT): $(generate_OBJECTS) $(generate_DEPENDENCIES) 
	@rm -f generate$(EXEEXT)
	$(generate_LINK) $(generate_OBJECTS) $(generate_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dyn-rec.Plo
include ./$(DEPDIR)/dyngen-dyngen-elf.Po
include ./$(DEPDIR)/dyngen-dyngen-i386.Po
include ./$(DEPDIR)/dyngen-dyngen.Po
include ./$(DEPDIR)/execute.Plo
include ./$(DEPDIR)/gen-ops-gen.Plo
include ./$(DEPDIR)/gen-ops-rel.Plo
include ./$(DEPDIR)/gen-ops.Plo
include ./$(DEPDIR)/generate-generate.Po
include ./$(DEPDIR)/generate-or32.Po
include ./$(DEPDIR)/insnset.Plo
include ./$(DEPDIR)/libop_la-op.Plo
include ./$(DEPDIR)/op-support.Plo
include ./$(DEPDIR)/op.Plo
include ./$(DEPDIR)/or32.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libop_la-op.lo: op.c
	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libop_la_CFLAGS) $(CFLAGS) -MT libop_la-op.lo -MD -MP -MF $(DEPDIR)/libop_la-op.Tpo -c -o libop_la-op.lo `test -f 'op.c' || echo '$(srcdir)/'`op.c
	mv -f $(DEPDIR)/libop_la-op.Tpo $(DEPDIR)/libop_la-op.Plo
#	source='op.c' object='libop_la-op.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libop_la_CFLAGS) $(CFLAGS) -c -o libop_la-op.lo `test -f 'op.c' || echo '$(srcdir)/'`op.c

dyngen-dyngen.o: dyngen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -MT dyngen-dyngen.o -MD -MP -MF $(DEPDIR)/dyngen-dyngen.Tpo -c -o dyngen-dyngen.o `test -f 'dyngen.c' || echo '$(srcdir)/'`dyngen.c
	mv -f $(DEPDIR)/dyngen-dyngen.Tpo $(DEPDIR)/dyngen-dyngen.Po
#	source='dyngen.c' object='dyngen-dyngen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -c -o dyngen-dyngen.o `test -f 'dyngen.c' || echo '$(srcdir)/'`dyngen.c

dyngen-dyngen.obj: dyngen.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -MT dyngen-dyngen.obj -MD -MP -MF $(DEPDIR)/dyngen-dyngen.Tpo -c -o dyngen-dyngen.obj `if test -f 'dyngen.c'; then $(CYGPATH_W) 'dyngen.c'; else $(CYGPATH_W) '$(srcdir)/dyngen.c'; fi`
	mv -f $(DEPDIR)/dyngen-dyngen.Tpo $(DEPDIR)/dyngen-dyngen.Po
#	source='dyngen.c' object='dyngen-dyngen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -c -o dyngen-dyngen.obj `if test -f 'dyngen.c'; then $(CYGPATH_W) 'dyngen.c'; else $(CYGPATH_W) '$(srcdir)/dyngen.c'; fi`

dyngen-dyngen-i386.o: dyngen-i386.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -MT dyngen-dyngen-i386.o -MD -MP -MF $(DEPDIR)/dyngen-dyngen-i386.Tpo -c -o dyngen-dyngen-i386.o `test -f 'dyngen-i386.c' || echo '$(srcdir)/'`dyngen-i386.c
	mv -f $(DEPDIR)/dyngen-dyngen-i386.Tpo $(DEPDIR)/dyngen-dyngen-i386.Po
#	source='dyngen-i386.c' object='dyngen-dyngen-i386.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -c -o dyngen-dyngen-i386.o `test -f 'dyngen-i386.c' || echo '$(srcdir)/'`dyngen-i386.c

dyngen-dyngen-i386.obj: dyngen-i386.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -MT dyngen-dyngen-i386.obj -MD -MP -MF $(DEPDIR)/dyngen-dyngen-i386.Tpo -c -o dyngen-dyngen-i386.obj `if test -f 'dyngen-i386.c'; then $(CYGPATH_W) 'dyngen-i386.c'; else $(CYGPATH_W) '$(srcdir)/dyngen-i386.c'; fi`
	mv -f $(DEPDIR)/dyngen-dyngen-i386.Tpo $(DEPDIR)/dyngen-dyngen-i386.Po
#	source='dyngen-i386.c' object='dyngen-dyngen-i386.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -c -o dyngen-dyngen-i386.obj `if test -f 'dyngen-i386.c'; then $(CYGPATH_W) 'dyngen-i386.c'; else $(CYGPATH_W) '$(srcdir)/dyngen-i386.c'; fi`

dyngen-dyngen-elf.o: dyngen-elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -MT dyngen-dyngen-elf.o -MD -MP -MF $(DEPDIR)/dyngen-dyngen-elf.Tpo -c -o dyngen-dyngen-elf.o `test -f 'dyngen-elf.c' || echo '$(srcdir)/'`dyngen-elf.c
	mv -f $(DEPDIR)/dyngen-dyngen-elf.Tpo $(DEPDIR)/dyngen-dyngen-elf.Po
#	source='dyngen-elf.c' object='dyngen-dyngen-elf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -c -o dyngen-dyngen-elf.o `test -f 'dyngen-elf.c' || echo '$(srcdir)/'`dyngen-elf.c

dyngen-dyngen-elf.obj: dyngen-elf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -MT dyngen-dyngen-elf.obj -MD -MP -MF $(DEPDIR)/dyngen-dyngen-elf.Tpo -c -o dyngen-dyngen-elf.obj `if test -f 'dyngen-elf.c'; then $(CYGPATH_W) 'dyngen-elf.c'; else $(CYGPATH_W) '$(srcdir)/dyngen-elf.c'; fi`
	mv -f $(DEPDIR)/dyngen-dyngen-elf.Tpo $(DEPDIR)/dyngen-dyngen-elf.Po
#	source='dyngen-elf.c' object='dyngen-dyngen-elf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dyngen_CFLAGS) $(CFLAGS) -c -o dyngen-dyngen-elf.obj `if test -f 'dyngen-elf.c'; then $(CYGPATH_W) 'dyngen-elf.c'; else $(CYGPATH_W) '$(srcdir)/dyngen-elf.c'; fi`

generate-or32.o: or32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -MT generate-or32.o -MD -MP -MF $(DEPDIR)/generate-or32.Tpo -c -o generate-or32.o `test -f 'or32.c' || echo '$(srcdir)/'`or32.c
	mv -f $(DEPDIR)/generate-or32.Tpo $(DEPDIR)/generate-or32.Po
#	source='or32.c' object='generate-or32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -c -o generate-or32.o `test -f 'or32.c' || echo '$(srcdir)/'`or32.c

generate-or32.obj: or32.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -MT generate-or32.obj -MD -MP -MF $(DEPDIR)/generate-or32.Tpo -c -o generate-or32.obj `if test -f 'or32.c'; then $(CYGPATH_W) 'or32.c'; else $(CYGPATH_W) '$(srcdir)/or32.c'; fi`
	mv -f $(DEPDIR)/generate-or32.Tpo $(DEPDIR)/generate-or32.Po
#	source='or32.c' object='generate-or32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -c -o generate-or32.obj `if test -f 'or32.c'; then $(CYGPATH_W) 'or32.c'; else $(CYGPATH_W) '$(srcdir)/or32.c'; fi`

generate-generate.o: generate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -MT generate-generate.o -MD -MP -MF $(DEPDIR)/generate-generate.Tpo -c -o generate-generate.o `test -f 'generate.c' || echo '$(srcdir)/'`generate.c
	mv -f $(DEPDIR)/generate-generate.Tpo $(DEPDIR)/generate-generate.Po
#	source='generate.c' object='generate-generate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -c -o generate-generate.o `test -f 'generate.c' || echo '$(srcdir)/'`generate.c

generate-generate.obj: generate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -MT generate-generate.obj -MD -MP -MF $(DEPDIR)/generate-generate.Tpo -c -o generate-generate.obj `if test -f 'generate.c'; then $(CYGPATH_W) 'generate.c'; else $(CYGPATH_W) '$(srcdir)/generate.c'; fi`
	mv -f $(DEPDIR)/generate-generate.Tpo $(DEPDIR)/generate-generate.Po
#	source='generate.c' object='generate-generate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(generate_CFLAGS) $(CFLAGS) -c -o generate-generate.obj `if test -f 'generate.c'; then $(CYGPATH_W) 'generate.c'; else $(CYGPATH_W) '$(srcdir)/generate.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


#gen-ops.h gen-ops.c gen-ops-gen.c gen-ops-rel.c: dyngen$(EXEEXT) op.lo
#	./dyngen$(EXEEXT) op.lo gen-ops.c gen-ops-gen.c gen-ops-rel.c gen-ops.h

execgen.c: generate$(EXEEXT) insnset.c
	./generate$(EXEEXT) $(srcdir)/insnset.c execgen.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
